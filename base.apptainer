Bootstrap: localimage
From: nv.sandbox

%post
    export DEBIAN_FRONTEND=noninteractive

    echo "=== Enabling snapshot support in sources.list ==="
    # Insert [snapshot=yes] immediately after 'deb'
    sed -i 's|^deb |deb [snapshot=yes] |' /etc/apt/sources.list
    sed -i 's|^deb-src |deb-src [snapshot=yes] |' /etc/apt/sources.list

    echo "=== Updating package lists using snapshot ==="
    apt update --snapshot 20250419T000000Z

    echo "=== Installing base packages ==="
    # python3 python3-dev python3-pip \
    apt install -y \
        curl libssl-dev pkg-config git \
        python3 python3-dev python3-pip python3-distutils \
        libhdf5-mpi-dev openmpi-bin openmpi-common libopenmpi-dev \
        build-essential \
        nvhpc-24-7=24.7-0 \
        --snapshot 20250419T000000Z
# nvhpc-24-7=24.7-0 nvhpc-cuda-12-4=24.7-0 \

    echo "=== Cleaning pip cache ==="
    pip3 cache purge

    echo "=== Upgrading pip, setuptools, wheel ==="
    # pip3 install --upgrade pip setuptools wheel
    
    # pip3 install --upgrade pip
    # pip3 install --no-cache-dir 'setuptools<69' wheel

    pip3 install --upgrade 'pip==24.0'
    pip3 install --no-cache-dir \
        'setuptools==68.2.2' 'wheel==0.43.0'

    echo "=== Installing numpy and mpi4py ==="
    # CFLAGS=-noswitcherror pip3 install numpy mpi4py --upgrade
    NUMPY_VER=1.26.4
    MPI4PY_VER=3.1.5
    CFLAGS=-noswitcherror \
    pip3 install --no-cache-dir \
        numpy==${NUMPY_VER} \
        mpi4py==${MPI4PY_VER}

    echo "=== Cloning and building h5py with MPI support ==="
    cd /
    # git clone https://github.com/h5py/h5py --depth 1
    git clone --branch 3.11.0 --depth 1 --single-branch https://github.com/h5py/h5py
    cd h5py
    export CC=mpicc
    export HDF5_MPI=ON
    CFLAGS=-noswitcherror pip3 install --no-binary=h5py .

    echo "=== Verifying h5py build ==="
    cd /
    python3 -c "import h5py; print('h5py version:', h5py.__version__); print('MPI support:', getattr(h5py.get_config(), 'mpi', 'Unavailable'))"

    echo "=== Installing PyTorch stack ==="
    # pip3 install --no-cache-dir torch torchvision torchaudio gymnasium
    pip3 install --no-cache-dir \
        torch==2.1.2+cu121 \
        torchvision==0.16.2+cu121 \
        torchaudio==2.1.2+cu121 \
        --index-url https://download.pytorch.org/whl/cu121
   
    pip3 install --no-cache-dir gymnasium==1.1.1 

    echo "=== Checking GPU availability in PyTorch ==="
    python3 -c "import torch; print('GPU available:', torch.cuda.is_available())"

    echo "=== Installing Rust via rustup (pinned) ==="
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.74.1
    export PATH="$HOME/.cargo/bin:$PATH"
    echo "Rust installed at: $(which cargo)"

