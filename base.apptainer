Bootstrap: localimage
From: nv.sandbox

# This will build a base image from ubuntu - it is much faster
# to build subsequent images from this if debugging
#Bootstrap: docker
#From: ubuntu:18.04

%post
    export DEBIAN_FRONTEND=noninteractive

    echo "=== Updating base system ==="
    apt-get update -y && apt-get install -y \
        curl libssl-dev pkg-config git \
        python3 python3-dev python3-pip \
        libhdf5-mpi-dev openmpi-bin openmpi-common libopenmpi-dev \
        build-essential

    echo "=== Cleaning up stale Rust/Cargo installs ==="
    rm -rf /root/.cargo /root/.rustup || true

    echo "=== Clean pip cache ==="
    pip cache purge

    echo "=== Upgrading pip, setuptools, wheel ==="
    pip3 install --upgrade pip setuptools wheel

    echo "=== Installing numpy and mpi4py first ==="
    CFLAGS=-noswitcherror pip3 install numpy mpi4py --upgrade

    echo "=== Cloning and building h5py with MPI support ==="
    cd /
    git clone https://github.com/h5py/h5py --depth 1
    cd /h5py
    export CC=mpicc
    export HDF5_MPI=ON
    CFLAGS=-noswitcherror pip3 install --no-binary=h5py .

    echo "=== Verifying h5py build ==="
    cd /
    python3 -c "import h5py; print('h5py version:', h5py.__version__); print('MPI support:', getattr(h5py.get_config(), 'mpi', 'Unavailable'))"

    echo "=== Installing PyTorch stack ==="
    pip3 install --no-cache-dir torch torchvision torchaudio gymnasium

    echo "=== Checking GPU availability in PyTorch ==="
    python3 -c "import torch; print('GPU available:', torch.cuda.is_available())"

    echo "=== Installing Rust via rustup ==="
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    export PATH="$HOME/.cargo/bin:$PATH"
    echo "Rust installed at: $(which cargo)"

%environment
    export PATH="$HOME/.cargo/bin:$PATH"
    export HDF5_MPI=ON

